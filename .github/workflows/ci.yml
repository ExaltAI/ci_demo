name: CI Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  code-quality:
    name: Code Quality
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    
    - name: Install uv
      uses: astral-sh/setup-uv@v3
      with:
        version: "latest"
    
    - name: Set up Python
      run: uv python install 3.11
    
    - name: Install dependencies
      run: |
        uv sync --dev
    
    - name: Run ruff linter
      run: |
        uv run ruff check .
    
    - name: Run ruff formatter
      run: |
        uv run ruff format --check .

  test:
    name: Run Tests
    runs-on: ubuntu-latest
    needs: code-quality
    strategy:
      matrix:
        python-version: ["3.12", "3.13"]
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Install uv
      uses: astral-sh/setup-uv@v3
      with:
        version: "latest"
    
    - name: Set up Python ${{ matrix.python-version }}
      run: uv python install ${{ matrix.python-version }}
    
    - name: Install dependencies
      run: |
        uv sync --dev
    
    - name: Run tests with pytest
      run: |
        uv run pytest tests/ -v --tb=short
    
    - name: Run tests with coverage
      run: |
        uv add pytest-cov
        uv run pytest tests/ --cov=app --cov-report=xml --cov-report=term-missing
    
    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v3
      with:
        file: ./coverage.xml
        fail_ci_if_error: false

  security:
    name: Security Scan
    runs-on: ubuntu-latest
    needs: test
    steps:
    - uses: actions/checkout@v4
    
    - name: Install uv
      uses: astral-sh/setup-uv@v3
      with:
        version: "latest"
    
    - name: Set up Python
      run: uv python install 3.11
    
    - name: Install dependencies
      run: |
        uv sync --dev
    
    - name: Run safety check
      run: |
        uv add safety
        uv run safety check
      continue-on-error: true
    
    - name: Run bandit security linter
      run: |
        uv add bandit
        uv run bandit -r app.py
      continue-on-error: true

  build:
    name: Build Application
    runs-on: ubuntu-latest
    needs: [code-quality, test]
    steps:
    - uses: actions/checkout@v4
    
    - name: Install uv
      uses: astral-sh/setup-uv@v3
      with:
        version: "latest"
    
    - name: Set up Python
      run: uv python install 3.11
    
    - name: Install dependencies
      run: |
        uv sync --dev
    
    - name: Build package
      run: |
        uv build
    
    - name: Test application startup
      run: |
        uv run python -c "from app import app; print('âœ… Application imports successfully')"
    
    - name: Upload build artifacts
      uses: actions/upload-artifact@v4
      with:
        name: ci_demo
        path: dist/
